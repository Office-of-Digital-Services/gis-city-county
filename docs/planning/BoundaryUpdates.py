# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2024-07-02 14:43:33
"""
import arcpy
from sys import argv
def #  NOT  IMPLEMENTED# Function Body not implemented
def #  NOT  IMPLEMENTED# Function Body not implemented

#For inline variable substitution, parameters passed as a String are evaluated using locals(), globals() and isinstance(). To override, substitute values directly.
def Model1(BOE_CityCoun_ty_OG):  # BoundaryUpdates

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    BOE_CityCounty = "BOE_CityCounty"
    Tiger_Line_OG = ""
    GNIS_OG = ""
    ALL_geocodes = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\all-geocodes-v2022.xlsx\\all_geocodes_v2022$"
    FedCodes_CA = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\FederalCodes_CA.xlsx\\FederalCodes_CA$"
    CityNames_ = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\DLA_CityNames.xlsx\\CityNames$"
    CountyNames_ = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\DLA_CountyNames.xlsx\\CountyNames$"

    # Process: Select (Select) (analysis)
    IncorporatedCities = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\IncorporatedCities"
    arcpy.analysis.Select(in_features=BOE_CityCounty, out_feature_class=IncorporatedCities, where_clause="CITY <> 'Unincorporated'")

    # Process: Dissolve -- City and COPRI (Dissolve) (management)
    BOE_IncorpCity = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\BOE_IncorpCity"
    arcpy.management.Dissolve(in_features=IncorporatedCities, out_feature_class=BOE_IncorpCity, dissolve_field=["CITY", "COPRI"])

    # Process: Join back in counties (Join Field) (management)
    Updated_Input_Table_3_ = arcpy.management.JoinField(in_data=BOE_IncorpCity, in_field="CITY", join_table=BOE_CityCounty, join_field="CITY", fields=["COUNTY"])[0]

    # Process: If Row Count Is (3) (If Row Count Is) ()
    True_3_, False_3_ = #  NOT  IMPLEMENTED(in_layer_or_view=Updated_Input_Table_3_, count_condition="IS_EQUAL_TO", count=482)

    # Process: Dissolve -- County (Dissolve) (management)
    BOE_County = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\BOE_County"
    arcpy.management.Dissolve(in_features=BOE_CityCounty, out_feature_class=BOE_County, dissolve_field=["COUNTY"])

    # Process: Select (2) (Select) (analysis)
    CountyCopri = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\CountyCopri"
    arcpy.analysis.Select(in_features=BOE_CityCounty, out_feature_class=CountyCopri, where_clause="CITY = 'Unincorporated'")

    # Process: Dissolve -- County and COPRI (Dissolve) (management)
    BOE_CountyCopri = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\CountyCopri_Dissolve"
    arcpy.management.Dissolve(in_features=CountyCopri, out_feature_class=BOE_CountyCopri)

    # Process: Join Field (Join Field) (management)
    BOE_County_2_ = arcpy.management.JoinField(in_data=BOE_County, in_field="COUNTY", join_table=BOE_CountyCopri, join_field="COUNTY", fields=["COPRI"])[0]

    # Process: If Row Count Is (If Row Count Is) ()
    True_136, False_137 = #  NOT  IMPLEMENTED(in_layer_or_view=BOE_County_2_, count_condition="IS_EQUAL_TO", count=52)

    # Process: Merge (Merge) (management)
    Working_BOE = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\BOE_Merge"
    if True_136 and True_3_:
        arcpy.management.Merge(inputs=[BOE_County_2_], output=Working_BOE, field_mappings="COUNTY \"COUNTY\" true true false 40 Text 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\BOE_County,COUNTY,0,39;COPRI \"COPRI\" true true false 0 Long 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\BOE_County,COPRI,-1,-1")

    # Process: Add Field (Add Field) (management)
    if True_136 and True_3_:
        BOE_Merge = arcpy.management.AddField(in_table=Working_BOE, field_name="Place_Name", field_type="TEXT")[0]

    # Process: Calculate Field -- Place_Name (Calculate Field) (management)
    if True_136 and True_3_:
        BOE_Working = arcpy.management.CalculateField(in_table=BOE_Merge, field="Place_Name", expression="naming(!CITY!,!COUNTY!)", code_block="""def naming(city, county):
    if city != None:
        return city
    else:
        return county""")[0]

    # Process: Table Select (3) (Table Select) (analysis)
    all_geocodes_v20_TableSelect1 = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\all_geocodes_v20_TableSelect1"
    arcpy.analysis.TableSelect(in_table=ALL_geocodes, out_table=all_geocodes_v20_TableSelect1, where_clause="State_FIPS_Code = '06'")

    # Process: Add Fields -- Place_Type, Place_Name (Add Fields (multiple)) (management)
    all_geocodes_v2022_2_ = arcpy.management.AddFields(in_table=all_geocodes_v20_TableSelect1, field_description=[["Place_Type", "TEXT", "", "255", "", ""], ["Place_Name", "TEXT", "", "255", "", ""], ["GEOID", "TEXT", "", "255", "", ""]])[0]

    # Process: Calculate Field - Split Name and Place Type (Calculate Field) (management)
    all_geocodes_v2022_ = arcpy.management.CalculateField(in_table=all_geocodes_v2022_2_, field="Place_Type", expression="!Area_Name!.split()[-1]")[0]

    # Process: Calculate Field TIGER_PlaceName) (Calculate Field) (management)
    Updated_Input_Table_2_ = arcpy.management.CalculateField(in_table=all_geocodes_v2022_, field="Place_Name", expression="placename(!Area_Name!, !Place_Type!)", code_block="""def placename(area, type):
    if type == \"County\":
        return area
    else:
        return area.rsplit(\" \", 1),[0]""")[0]

    # Process: Calculate Field - Concat GEOID by place type (Calculate Field) (management)
    TIGER_Line_Place_Type_and_GEOID = arcpy.management.CalculateField(in_table=Updated_Input_Table_2_, field="GEOID", expression="type_id(!Place_Type!, !State_FIPS_Code!,!County_FIPS_Code!,!Place_FIPS_Code!)", code_block="""def type_id(type, state, county, place):
    if type==\"County\":
        return state + county
    elif type == \"town\" or type == \"city\":
        return state + place
   """)[0]

    # Process: Add GEOID and TYPE to BOE (Join Field) (management)
    if True_136 and True_3_:
        BOE_Working2 = arcpy.management.JoinField(in_data=BOE_Working, in_field="Place_Name", join_table=TIGER_Line_Place_Type_and_GEOID, join_field="Place_Name", fields=["GEOID", "Place_Type"])[0]

    # Process: Table Select (2) (Table Select) (analysis)
    FederalCodes_CA_TableSelect_2_ = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\FederalCodes_CA_TableSelect"
    arcpy.analysis.TableSelect(in_table=FedCodes_CA, out_table=FederalCodes_CA_TableSelect_2_, where_clause="state_name = 'California' And feature_class = 'Civil' And (census_class_code = 'H1' Or census_class_code = 'C1')")

    # Process: Add Field -- GNIS_Name (Add Field) (management)
    FederalCodes_CA_TableSelect_3_ = arcpy.management.AddField(in_table=FederalCodes_CA_TableSelect_2_, field_name="GNIS_Name", field_type="TEXT")[0]

    # Process: Calculate Field --GNIS_Name (Calculate Field) (management)
    GNIS_Legal_Place_Name = arcpy.management.CalculateField(in_table=FederalCodes_CA_TableSelect_3_, field="GNIS_Name", expression="plit_name(!census_class_code!,!feature_name!)", code_block="""def split_name(classcode, name):
    if classcode==\"C1\":
        return name.split(\" \",2)[2]
    elif classcode == \"H1\":
        return name.rsplit(\" \",1)[0]
    else:
        return name""")[0]

    # Process: Add Legal_Name (aka feature name) to BOE (Join Field) (management)
    if True_136 and True_3_:
        BOE_working3 = arcpy.management.JoinField(in_data=BOE_Working2, in_field="Place_Name", join_table=GNIS_Legal_Place_Name, join_field="GNIS_Name", fields=["feature_name"])[0]

    # Process: Merge (2) (Merge) (management)
    DLA_Abbr = "C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb\\CityNames_Merge"
    arcpy.management.Merge(inputs=[CityNames_, CountyNames_], output=DLA_Abbr, field_mappings="OBJECTID \"OBJECTID\" true true false 8 Double 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CityNames.xlsx\\CityNames$,OBJECTID,-1,-1,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CountyNames.xlsx\\CountyNames$,OBJECTID,-1,-1;CNTY_ABBR \"CNTY_ABBR\" true true false 255 Text 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CityNames.xlsx\\CityNames$,CNTY_ABBR,0,254,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CountyNames.xlsx\\CountyNames$,CNTY_ABBR,0,254;PLACE_NAME \"PLACE_NAME\" true true false 255 Text 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CityNames.xlsx\\CityNames$,PLACE_NAME,0,254,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CountyNames.xlsx\\CountyNames$,PLACE_NAME,0,254;PLACE_ABBR \"PLACE_ABBR\" true true false 255 Text 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CityNames.xlsx\\CityNames$,PLACE_ABBR,0,254,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CountyNames.xlsx\\CountyNames$,PLACE_ABBR,0,254;PLACE_TYPE \"PLACE_TYPE\" true true false 255 Text 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CityNames.xlsx\\CityNames$,PLACE_TYPE,0,254,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CountyNames.xlsx\\CountyNames$,PLACE_TYPE,0,254;Shape_Leng \"Shape_Leng\" true true false 8 Double 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CityNames.xlsx\\CityNames$,Shape_Leng,-1,-1,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CountyNames.xlsx\\CountyNames$,Shape_Leng,-1,-1;Shape_Length \"Shape_Length\" true true false 8 Double 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CityNames.xlsx\\CityNames$,Shape_Length,-1,-1,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CountyNames.xlsx\\CountyNames$,Shape_Length,-1,-1;Shape_Area \"Shape_Area\" true true false 8 Double 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CityNames.xlsx\\CityNames$,Shape_Area,-1,-1,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CountyNames.xlsx\\CountyNames$,Shape_Area,-1,-1;GEOID \"GEOID\" true true false 255 Text 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CityNames.xlsx\\CityNames$,GEOID,0,254,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CountyNames.xlsx\\CountyNames$,GEOID,0,254;COPRI_ID \"COPRI_ID\" true true false 255 Text 0 0,First,#,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CityNames.xlsx\\CityNames$,COPRI_ID,0,254,C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\..\\DLA_CountyNames.xlsx\\CountyNames$,COPRI_ID,0,254")

    # Process: Add Abbre to BOE (Join Field) (management)
    if True_136 and True_3_:
        Updated_Input_Table = arcpy.management.JoinField(in_data=BOE_working3, in_field="Place_Name", join_table=DLA_Abbr, join_field="PLACE_NAME", fields=["PLACE_ABBR", "CNTY_ABBR"])[0]

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb", workspace="C:\\Users\\liana.huang\\Documents\\DOT Boundaries Update\\BOE_CityCounty_CDTEdit\\Default.gdb"):
        Model1(*argv[1:])
